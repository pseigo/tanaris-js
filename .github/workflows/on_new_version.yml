name: Create GitHub release and publish docs on new version tag

on:
  push:
    tags:
      - v[0-9]*

  # Allow running workflow manually from the Actions tab.
  workflow_dispatch:

env:
  VERSION: ${{ github.ref_name }}
  ARTIFACTS_DIR: release-artifacts

jobs:
  build_artifacts:
    name: Build 'dist' and 'docs'

    permissions:
      contents: read

    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          # [ LTS codenames ](https://nodejs.org/en/about/previous-releases)
          node-version: "lts/Jod"
          check-latest: true
          cache: 'npm'

      - name: Install npm dependencies
        run: npm ci

      - name: Run 'prepare' script
        run: npm run prepare

      - name: Create build artifact archives
        run: |
          PREFIX=tanaris-js_$VERSION
          DIST_FILES="package.json LICENSE README.md assets/images/badges assets/images/banners dist"

          mkdir $ARTIFACTS_DIR
          tar czf $ARTIFACTS_DIR/$PREFIX_dist.tar.gz $DIST_FILES
          tar czf $ARTIFACTS_DIR/$PREFIX_dist-with-docs.tar.gz $DIST_FILES docs
          git archive --format=tar.gz --output=$ARTIFACTS_DIR/$PREFIX_src.tar.gz $VERSION

      - name: Upload build artifact archives
        uses: action/upload-artifact@v4
        with:
          name: build-artifacts-archives
          retention-days: 60
          path: ${{ env.ARTIFACTS_DIR }}/*
          compression-level: 1 # TODO: test file sizes and times to compress tar.gz archives from 0-9
          if-no-files-found: error
          overwrite: false
          include-hidden-files: false

      - name: Upload GitHub Pages artifact
        id: docs_deployment
        uses: action/upload-pages-artifact@v3
        with:
          path: docs/

  publish_docs:
    name: Publish docs to GitHub Pages
    needs: build_artifacts

    permissions:
      pages: write
      id-token: write  # ? "to verify the deployment originates from an appropriate source"

    environment:
      name: github-pages
      url: ${{ steps.docs_deployment.output.page_url }}

    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: docs_deployment
        uses: action/deploy-pages@v4

  create_github_release:
    name: Create GitHub release
    needs: build_artifacts

    permissions:
      contents: write

    runs-on: ubuntu-latest
    steps:
      - name: Download build artifacts archives
        uses: action/download-artifact@v4
        with:
          name: build-artifacts-archives
          path: ${{ env.ARTIFACTS_DIR }}/

      - name: Create release
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ env.ARTIFACTS_DIR }}/*
          preserve_order: true
          fail_on_unmatched_files: true
          prerelease: false
          make_latest: true
